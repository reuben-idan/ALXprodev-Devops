#!/bin/bash

# API Request Automation Script
# Makes a request to the Pokémon API for Pikachu data

# API endpoint for Pikachu (Pokémon ID: 25)
API_URL="https://pokeapi.co/api/v2/pokemon/pikachu"

# Output files
DATA_FILE="data.json"
ERROR_FILE="errors.txt"

echo "Making API request to Pokémon API for Pikachu data..."

# Make the API request and save response to data.json
# Check if curl is available
if command -v curl >/dev/null 2>&1; then
    # Use curl to make the request
    if curl -s -f "$API_URL" > "$DATA_FILE" 2>/dev/null; then
        echo "Success! Pikachu data saved to $DATA_FILE"
        echo "Response status: $(curl -s -o /dev/null -w "%{http_code}" "$API_URL")"
    else
        echo "Error: Failed to fetch data from API" | tee -a "$ERROR_FILE"
        echo "Timestamp: $(date)" >> "$ERROR_FILE"
        echo "API URL: $API_URL" >> "$ERROR_FILE"
        echo "HTTP Status: $(curl -s -o /dev/null -w "%{http_code}" "$API_URL" 2>/dev/null || echo 'Unknown')" >> "$ERROR_FILE"
        exit 1
    fi
elif command -v wget >/dev/null 2>&1; then
    # Fallback to wget if curl is not available
    if wget -q -O "$DATA_FILE" "$API_URL" 2>/dev/null; then
        echo "Success! Pikachu data saved to $DATA_FILE"
    else
        echo "Error: Failed to fetch data from API" | tee -a "$ERROR_FILE"
        echo "Timestamp: $(date)" >> "$ERROR_FILE"
        echo "API URL: $API_URL" >> "$ERROR_FILE"
        exit 1
    fi
else
    echo "Error: Neither curl nor wget is available" | tee -a "$ERROR_FILE"
    echo "Timestamp: $(date)" >> "$ERROR_FILE"
    exit 1
fi

# Validate that the response is valid JSON
if command -v jq >/dev/null 2>&1; then
    if jq empty "$DATA_FILE" 2>/dev/null; then
        echo "JSON validation: Success"
    else
        echo "Error: Invalid JSON response" | tee -a "$ERROR_FILE"
        echo "Timestamp: $(date)" >> "$ERROR_FILE"
        echo "API URL: $API_URL" >> "$ERROR_FILE"
        exit 1
    fi
else
    echo "Warning: jq not available, skipping JSON validation"
fi

echo "Script completed successfully!" 